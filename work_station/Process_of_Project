과제를 위한 work_station 폴더

진행 과정 텍스트
2024 11 29 오후 2시 경 
김민재, 박준하, 황승형 조원 3명이 디스코드에 모여서 과제에 대한 논의 시작.
공용 작업을 위한 깃허브 Repository를 하나 제작했음.

역할
황승형 - 파일 입출력에 관한 부분
김민재 - 그래프 출력에 관한 부분
박준하 - main에 관한 부분

2024 11 29 오후 2시 40분 경
황승형이 file_mouth_print.py 를 깃허브에 업로드 하였음. 

2024 11 29 오후 2시 58분 경
황승형이 file_mouth_print.py 에서 header 변수가 사용되지 않는 것을 발견하고 이를 삭제 및 수정.

2024 12 01 오후 1시 57분
박준하가 main.py 파일을 repository에 업로드 할려고 했으나 권한이 없음을 알게됨

2024 12 01 오후 2시 21분
김민재, 박준하가 황승형에게 업로드 권한 요청. 업로드 권한 부여됨 

2024 12 01 오후 3시 경
박준하가 그래프 선과 축이 무엇을 의미하는지 알 수 있었으면 좋겠다는 생각을 하여 이를 반영
그래프 출력 방식을 figure 위에 하나의 서브 플롯을 출력하는 것으로 바꾸고 제목, 축 이름, 범례를 추가로 표시함.

2024 12 01 오후 3시 30분 경
graph.py가 그래프를 생성하는 함수 graph_generator의 작동 방식 변경.
기존에는 graph.py가 main.py를 import하여 main.py의 변수와 함수를 가져와 
graph.py 내부에서 직접 그래프의 x축, y축에 사용될 데이터를 선정하였지만 
이렇게 코드를 구성하면 main.py 실행 시 import가 계속 순환하여 무한 루프에 빠지는 오류 발생.
따라서 지금과 같이 graph.py의 그래프 생성 함수는 parameter를 갖고 main.py에서 데이터를 parameter로 연결하는 방식으로 변경

2024 12 01 오후 4시 38분
main.py에서 사용자에게 열람 과목을 입력받는 코드를 
과목명 문자열이 아닌 mouth_printing 함수가 반환하는 딕셔너리의 키값이 되도록 변경함. 
이로써 파일이 달라져도 정확한 과목명을 출력할 수 있게 됨

2024 12 09 오후 12 44분
file_mouth_print_New.py를 제작 하였음.
기존 file_mouth_print.py에서 반환하는 딕셔너리를 보면, 숫자들의 끝 부분에 공백이 존재하였음.
strip()을 이용해 공백을 없애는 부분을 추가하였음.

2024 12 09 오후 3시 경
main_New.py
파일의 가짓수가 늘어남에 따라, 사용자가 선택한 파일에 따라 다른 결과가 나오도록 조정함.
이를 위해 file_mouth_printing 함수에 매개변수로 사용자가 입력한 user_input_year을 넣음 

2024 12 09 오후 5시 경
graph_New.py 제작
기존 꺾은선 그래프 말고 표준점수 분포를 표시하기 좋은 다른 그래프 양식을 찾아보았고,
히스토그램과 stairs 그래프를 후보로 물색하였으나
히스토그램은 표준점수 전체 범위를 일정한 범위로 n등분하여 각 등분 사이에 사람이 몇명 존재하는지를 표시하는 그래프이고,
stairs 그래프 역시 예를 들면 표준점수 160점~157점에 몇명의 사람이 분포하는지를 표시하는 그래프였기 때문에
이 둘은 표준점수 값 범위가 아닌 값 자체에 있는 인원수를 표시하려는 (ex. 표준점수 '140점'에 n명이 있음을 표시) 
과제의 목적에 알맞지 않다고 판단함

대안으로 막대그래프를 선택.
탐구가 아닌 공통과목의 경우 인원수가 존재하는 표준점수 값 구간이 매우 촘촘하여
남학생과 여학생 그래프를 한 서브플롯 안에 표시하기에는 가독성 측면에서 무리라고 판단
(2, 1) 크기의 서브플롯을 생성하여 남학생 / 여학생 그래프를 분리하여 표시함


