file_mouth_print.py
이 파일에는 제공된 csv 파일로부터 정보를 가져와 이를 과목별 성적으로 가공한 리스트를 return하는 함수가 있음.
csv를 import하여 제공된 파일을 csv.reader로 읽음. 헤더를 없앤 정보를 data에 리스트로 저장.
이제 리스트에 저장되어 있는 정보들을 좀 더 좋은 정보로 만들기 위해
하나의 딕셔너리를 생성하고, 과목별로 성적을 분류함.
국어: [a, b, c], [d, e, f] ...... 수학: [], [] 이런식으로.
이후 만들어진 딕셔너리를 return.

main.py 
이 파일에는 앞서 만들어진 두 모듈을 이용해 사용자가 원하는 그래프를 출력한다.
우선 file_mouth_printing 함수를 file_mouth_print 모듈로부터 import 한다.
그 후, 사용자로부터 열람하고 싶은 년도와 과목을 입력받는다. 
그 다음에는, file_mouth_printing 함수로 제공받은 딕셔너리를 data_processing 함수를 이용해 가공한다.
데이터를 가공한 후, data_processing 함수는 리스트의 형태로 열람하는 과목의 특정 표준점수와 그에 해당하는 남성 수, 여성 수를 반환한다.
마지막으로 graph 모듈에서 graph_generator 함수를 import 하여 x축, y축에 해당하는 값을 입력해주면 원하는 결과를 얻을 수 있다.

graph.py
이 파일은 main.py에서 가공한 표준점수와 학생 수 데이터를 parameter로 받아서 표준점수 분포 그래프를 만들고 출력한다.
matplotlib.pyplot을 import하여 그래프가 그려질 figure을 생성하고, 남학생 분포와 여학생 분포를 한 서브 플롯에 모두 표시한다.
그래프의 x축은 data_processing 함수에서 반환한 표준 점수 값이며, y축은 해당 점수에 해당하는 남학생 / 여학생 수이다.
남학생 그래프는 파란색 직선으로, 여학생 그래프는 빨간색 직선으로 표시했으며 그래프 제목과 축 이름, 범례를 표시하였다.
해당 함수는 x, male, female이라는 parameter을 받아 x를 x축 데이터, (male / female)을 y축 데이터로 한 그래프를 표시할 뿐이며,
parameter에 가공된 데이터를 집어넣는 작업은 main.py에서 수행될 것이다.


file_mouth_print_New.py
기존 file_mouth_print.py를 거의 그대로 이용한다.
단순히 자료가 추가된 것이므로, 입력받는 년도에 따라 가져오는 파일을 다르게 해야 한다.
이를 위해, 매개변수로 년도를 받고, open하는 파일 명을 '{입력받은 년도 - 1}1231.csv'가 되도록 하면
매개변수에 따라 알맞은 년도의 자료를 딕셔너리로 변환하도록 한다.

graph_New.py
Process_of_Project 문서에서 서술한 과정에 따라 막대그래프를 표시하기로 하였다.
main_New.py에서 전달받는 정보의 양식은 동일하므로 graph_generator() 함수의 매개변수는 바꿀 필요가 없으며
전달받은 정보가 하는 역할 역시 graph.py에서와 동일하다.
따라서 그래프가 그려질 서브플롯의 개수와 그려지는 그래프 형태를 결정하는 부분만 수정하였다.

(2, 1) 크기 서브플롯의 남학생 분포 그래프, 여학생 분포 그래프를 각각 그릴 것이므로
male_graph와 female_graph를 각각 생성해 여기에 기존의 plot() 대신 bar() 함수를 이용해
함수에 들어갈 매개변수만 bar()의 양식에 따라 조정해주었다.
